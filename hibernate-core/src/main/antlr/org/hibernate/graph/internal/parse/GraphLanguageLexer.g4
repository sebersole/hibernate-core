lexer grammar GraphLanguageLexer;

@header {
/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */
package org.hibernate.graph.internal.parse;
}

@members {
/*
 * Lexer for the Hibernate EntityGraph Language
 *
 * It is generated by Antlr via the lexer grammar file `GraphLanguageLexer.g4`
 */
}

channels {
  WHITESPACE_CHANNEL
}

WS : ( ' ' | '\t' | '\f' | EOL ) -> channel(WHITESPACE_CHANNEL);

fragment EOL	: [\r\n]+;

COLON: ':';

COMMA: ',';

DOT: '.';

LPAREN: '(';

RPAREN: ')';

/**
 * In this grammar, basically any string since we (atm) have no keywords
 */
NAME : NAME_START ( NAME_CONTINUATION )*;

fragment NAME_START
    :    '_'
    |    '$'
    |    'a'..'z'
    // HHH-558 : Allow unicode chars in identifiers
    //|    '\u0080'..'\ufffe'
    ;

fragment NAME_CONTINUATION
    :    NAME_START
    |    '0'..'9'
    ;
